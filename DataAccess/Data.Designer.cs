//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Data", "ObjectUser", "Object", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Object), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.User))]
[assembly: EdmRelationshipAttribute("Data", "QuestionTemplateAnswerTemplate", "QuestionTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.QuestionTemplate), "AnswerTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.AnswerTemplate))]
[assembly: EdmRelationshipAttribute("Data", "UserUserRelation", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.User), "UserRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.UserRelation))]
[assembly: EdmRelationshipAttribute("Data", "UserRelationUser", "UserRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.UserRelation), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.User))]
[assembly: EdmRelationshipAttribute("Data", "ObjectUserRelation", "Object", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Object), "UserRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.UserRelation))]
[assembly: EdmRelationshipAttribute("Data", "ObjectUser1", "Object", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Object), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.User))]
[assembly: EdmRelationshipAttribute("Data", "CategoryObject", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Category), "Object", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Object))]
[assembly: EdmRelationshipAttribute("Data", "CategoryCategory", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccess.Category), "Category1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.Category))]
[assembly: EdmRelationshipAttribute("Data", "ObjectObjectPropty", "Object", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Object), "ObjectPropty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.ObjectPropty))]

#endregion

namespace DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataContainer object using the connection string found in the 'DataContainer' section of the application configuration file.
        /// </summary>
        public DataContainer() : base("name=DataContainer", "DataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataContainer object.
        /// </summary>
        public DataContainer(string connectionString) : base(connectionString, "DataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataContainer object.
        /// </summary>
        public DataContainer(EntityConnection connection) : base(connection, "DataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Object> Object
        {
            get
            {
                if ((_Object == null))
                {
                    _Object = base.CreateObjectSet<Object>("Object");
                }
                return _Object;
            }
        }
        private ObjectSet<Object> _Object;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectPropty> ObjectPropty
        {
            get
            {
                if ((_ObjectPropty == null))
                {
                    _ObjectPropty = base.CreateObjectSet<ObjectPropty>("ObjectPropty");
                }
                return _ObjectPropty;
            }
        }
        private ObjectSet<ObjectPropty> _ObjectPropty;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionTemplate> QuestionTemplate
        {
            get
            {
                if ((_QuestionTemplate == null))
                {
                    _QuestionTemplate = base.CreateObjectSet<QuestionTemplate>("QuestionTemplate");
                }
                return _QuestionTemplate;
            }
        }
        private ObjectSet<QuestionTemplate> _QuestionTemplate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AnswerTemplate> AnswerTemplate
        {
            get
            {
                if ((_AnswerTemplate == null))
                {
                    _AnswerTemplate = base.CreateObjectSet<AnswerTemplate>("AnswerTemplate");
                }
                return _AnswerTemplate;
            }
        }
        private ObjectSet<AnswerTemplate> _AnswerTemplate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRelation> UserRelation
        {
            get
            {
                if ((_UserRelation == null))
                {
                    _UserRelation = base.CreateObjectSet<UserRelation>("UserRelation");
                }
                return _UserRelation;
            }
        }
        private ObjectSet<UserRelation> _UserRelation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Object EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObject(Object @object)
        {
            base.AddObject("Object", @object);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectPropty EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectPropty(ObjectPropty objectPropty)
        {
            base.AddObject("ObjectPropty", objectPropty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionTemplate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionTemplate(QuestionTemplate questionTemplate)
        {
            base.AddObject("QuestionTemplate", questionTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AnswerTemplate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnswerTemplate(AnswerTemplate answerTemplate)
        {
            base.AddObject("AnswerTemplate", answerTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRelation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRelation(UserRelation userRelation)
        {
            base.AddObject("UserRelation", userRelation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="AnswerTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AnswerTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AnswerTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="answer">Initial value of the Answer property.</param>
        public static AnswerTemplate CreateAnswerTemplate(global::System.Int64 id, global::System.String answer)
        {
            AnswerTemplate answerTemplate = new AnswerTemplate();
            answerTemplate.Id = id;
            answerTemplate.Answer = answer;
            return answerTemplate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "QuestionTemplateAnswerTemplate", "QuestionTemplate")]
        public QuestionTemplate QuestionTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionTemplate>("Data.QuestionTemplateAnswerTemplate", "QuestionTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionTemplate>("Data.QuestionTemplateAnswerTemplate", "QuestionTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionTemplate> QuestionTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionTemplate>("Data.QuestionTemplateAnswerTemplate", "QuestionTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionTemplate>("Data.QuestionTemplateAnswerTemplate", "QuestionTemplate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "CategoryObject", "Object")]
        public EntityCollection<Object> Object
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Object>("Data.CategoryObject", "Object");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Object>("Data.CategoryObject", "Object", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "CategoryCategory", "Category1")]
        public EntityCollection<Category> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("Data.CategoryCategory", "Category1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("Data.CategoryCategory", "Category1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "CategoryCategory", "Category")]
        public Category Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Data.CategoryCategory", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Data.CategoryCategory", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Data.CategoryCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Data.CategoryCategory", "Category", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="Object")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Object : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Object object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="remark">Initial value of the Remark property.</param>
        /// <param name="hot">Initial value of the Hot property.</param>
        public static Object CreateObject(global::System.Int64 id, global::System.String name, global::System.String remark, global::System.Int64 hot)
        {
            Object @object = new Object();
            @object.Id = id;
            @object.Name = name;
            @object.Remark = remark;
            @object.Hot = hot;
            return @object;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Hot
        {
            get
            {
                return _Hot;
            }
            set
            {
                OnHotChanging(value);
                ReportPropertyChanging("Hot");
                _Hot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hot");
                OnHotChanged();
            }
        }
        private global::System.Int64 _Hot;
        partial void OnHotChanging(global::System.Int64 value);
        partial void OnHotChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "CategoryObject", "Category")]
        public EntityCollection<Category> Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("Data.CategoryObject", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("Data.CategoryObject", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "ObjectObjectPropty", "ObjectPropty")]
        public EntityCollection<ObjectPropty> ObjectPropty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ObjectPropty>("Data.ObjectObjectPropty", "ObjectPropty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ObjectPropty>("Data.ObjectObjectPropty", "ObjectPropty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="ObjectPropty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectPropty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectPropty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ObjectPropty CreateObjectPropty(global::System.Int32 id, global::System.String value, global::System.String name)
        {
            ObjectPropty objectPropty = new ObjectPropty();
            objectPropty.Id = id;
            objectPropty.Value = value;
            objectPropty.Name = name;
            return objectPropty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "ObjectObjectPropty", "Object")]
        public Object Object
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Object>("Data.ObjectObjectPropty", "Object").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Object>("Data.ObjectObjectPropty", "Object").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Object> ObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Object>("Data.ObjectObjectPropty", "Object");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Object>("Data.ObjectObjectPropty", "Object", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="QuestionTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="regex">Initial value of the Regex property.</param>
        public static QuestionTemplate CreateQuestionTemplate(global::System.Int64 id, global::System.String regex)
        {
            QuestionTemplate questionTemplate = new QuestionTemplate();
            questionTemplate.Id = id;
            questionTemplate.Regex = regex;
            return questionTemplate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Regex
        {
            get
            {
                return _Regex;
            }
            set
            {
                OnRegexChanging(value);
                ReportPropertyChanging("Regex");
                _Regex = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Regex");
                OnRegexChanged();
            }
        }
        private global::System.String _Regex;
        partial void OnRegexChanging(global::System.String value);
        partial void OnRegexChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "QuestionTemplateAnswerTemplate", "AnswerTemplate")]
        public EntityCollection<AnswerTemplate> AnswerTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnswerTemplate>("Data.QuestionTemplateAnswerTemplate", "AnswerTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnswerTemplate>("Data.QuestionTemplateAnswerTemplate", "AnswerTemplate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="tel">Initial value of the Tel property.</param>
        /// <param name="qQ">Initial value of the QQ property.</param>
        /// <param name="birth">Initial value of the Birth property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        /// <param name="male">Initial value of the Male property.</param>
        /// <param name="married">Initial value of the Married property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name, global::System.String tel, global::System.String qQ, global::System.DateTime birth, global::System.Int32 height, global::System.Int32 weight, global::System.Boolean male, global::System.Boolean married)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            user.Tel = tel;
            user.QQ = qQ;
            user.Birth = birth;
            user.Height = height;
            user.Weight = weight;
            user.Male = male;
            user.Married = married;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tel
        {
            get
            {
                return _Tel;
            }
            set
            {
                OnTelChanging(value);
                ReportPropertyChanging("Tel");
                _Tel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tel");
                OnTelChanged();
            }
        }
        private global::System.String _Tel;
        partial void OnTelChanging(global::System.String value);
        partial void OnTelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QQ
        {
            get
            {
                return _QQ;
            }
            set
            {
                OnQQChanging(value);
                ReportPropertyChanging("QQ");
                _QQ = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QQ");
                OnQQChanged();
            }
        }
        private global::System.String _QQ;
        partial void OnQQChanging(global::System.String value);
        partial void OnQQChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Birth
        {
            get
            {
                return _Birth;
            }
            set
            {
                OnBirthChanging(value);
                ReportPropertyChanging("Birth");
                _Birth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birth");
                OnBirthChanged();
            }
        }
        private global::System.DateTime _Birth;
        partial void OnBirthChanging(global::System.DateTime value);
        partial void OnBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Int32 _Height;
        partial void OnHeightChanging(global::System.Int32 value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Int32 _Weight;
        partial void OnWeightChanging(global::System.Int32 value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Male
        {
            get
            {
                return _Male;
            }
            set
            {
                OnMaleChanging(value);
                ReportPropertyChanging("Male");
                _Male = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Male");
                OnMaleChanged();
            }
        }
        private global::System.Boolean _Male;
        partial void OnMaleChanging(global::System.Boolean value);
        partial void OnMaleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Married
        {
            get
            {
                return _Married;
            }
            set
            {
                OnMarriedChanging(value);
                ReportPropertyChanging("Married");
                _Married = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Married");
                OnMarriedChanged();
            }
        }
        private global::System.Boolean _Married;
        partial void OnMarriedChanging(global::System.Boolean value);
        partial void OnMarriedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "ObjectUser", "Object")]
        public EntityCollection<Object> LiveCity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Object>("Data.ObjectUser", "Object");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Object>("Data.ObjectUser", "Object", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "UserUserRelation", "UserRelation")]
        public EntityCollection<UserRelation> UserRelation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRelation>("Data.UserUserRelation", "UserRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRelation>("Data.UserUserRelation", "UserRelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "ObjectUser1", "Object")]
        public EntityCollection<Object> Favorites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Object>("Data.ObjectUser1", "Object");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Object>("Data.ObjectUser1", "Object", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="UserRelation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRelation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRelation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static UserRelation CreateUserRelation(global::System.Int32 id)
        {
            UserRelation userRelation = new UserRelation();
            userRelation.Id = id;
            return userRelation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "UserUserRelation", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Data.UserUserRelation", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Data.UserUserRelation", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Data.UserUserRelation", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Data.UserUserRelation", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "UserRelationUser", "User")]
        public EntityCollection<User> TargetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Data.UserRelationUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Data.UserRelationUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Data", "ObjectUserRelation", "Object")]
        public EntityCollection<Object> RelationName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Object>("Data.ObjectUserRelation", "Object");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Object>("Data.ObjectUserRelation", "Object", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
